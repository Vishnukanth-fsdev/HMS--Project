package com.authservice.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class AppSecurityConfig {
	
	String[] publicEndpoints= {
			"/api/v1/auth/register",
			"/api/v1/auth/login",
			"/v3/api-docs/**",
			"/swagger-ui/**",
			"/swagger-ui/index.html",
			"/swagger-resources/**",
			"/webjars/**"
	};
	
	@Bean
	public PasswordEncoder getEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	public AuthenticationManager authManager(AuthenticationConfiguration config) throws Exception {
		return config.getAuthenticationManager();
	}
	
	@Bean
	public SecurityFilterChain securityConfig(HttpSecurity http) throws Exception{
		http
		.csrf(csrf->csrf.disable())
		.authorizeHttpRequests(auth -> 
		auth.requestMatchers(
				"/api/v1/auth/register",
				"/v3/api-docs/**",
				"/swagger-ui/**",
				"/swagger-ui/index.html",
				"/swagger-resources/**",
				"/webjars/**").permitAll()
		.anyRequest().authenticated()
		);
		return http.build();
	}
}
